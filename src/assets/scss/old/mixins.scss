.no-select {
	user-select: none;
}

@mixin pointer {
	cursor: pointer;
	*cursor: hand;
}

@mixin inline-block {
	display: inline-block;
	*display: inline;
	zoom: 1;
}

.clear {
  clear: both;
}

.zebra {
  &:nth-child(even) {
    background: rgba(191,191,191,0.2);
  }

  &:nth-child(odd) {
    background: rgba(223,223,223,0.2);
  }
}

@mixin opacity($opacity: 1) {
  -moz-opacity: $opacity;
  opacity: $opacity;
  -ms-filter: progid:DXImageTransform.Microsoft.Alpha(opacity=(" + "#{$opacity}" * 100 + "));
  filter: alpha(opacity = (" + "#{$opacity}" * 100 + "));
}

@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

.text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin user-icon-style($size: 32px, $font-size: 1.5rem, $border-radius: inherit) {
  border-radius: $border-radius;
  width: $size;
  height: $size;
  line-height: $size;
  font-size: $font-size;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin border-radius($radius: 5px){
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
}

@mixin user-avatar($size){
	width: $size;
	height: $size;
	@include border-radius(50%);
}

@mixin user-icon($size, $font-size){
	@include user-avatar($size);
	line-height: $size;
	font-size: $font-size;
}
